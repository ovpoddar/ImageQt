// <auto-generated/>
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint XOpenDisplay(string displayName)
        {
            nint __retVal;
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __displayName_native = &global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.GetPinnableReference(displayName))
            {
                __retVal = __PInvoke((ushort*)__displayName_native);
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XOpenDisplay", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(ushort* __displayName_native);
        }
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XDefaultScreen", ExactSpelling = true)]
        public static extern partial int XDefaultScreen(nint display);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCreateSimpleWindow", ExactSpelling = true)]
        public static extern partial ulong XCreateSimpleWindow(nint display, ulong parentWindow, int x, int y, uint width, uint height, uint borderWidth, ulong border, ulong background);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XRootWindow", ExactSpelling = true)]
        public static extern partial ulong XRootWindow(nint display, int screen);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XBlackPixel", ExactSpelling = true)]
        public static extern partial ulong XBlackPixel(nint display, int screen);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XWhitePixel", ExactSpelling = true)]
        public static extern partial ulong XWhitePixel(nint display, int screen);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XDefaultVisual", ExactSpelling = true)]
        public static extern partial nint XDefaultVisual(nint display, int screen);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XDefaultDepth", ExactSpelling = true)]
        public static extern partial uint XDefaultDepth(nint display, int screen);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XSelectInput", ExactSpelling = true)]
        public static extern partial int XSelectInput(nint display, ulong window, global::ImageQT.Models.Linux.EventMask eventMask);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial ulong XInternAtom(nint display, string name, bool state)
        {
            byte* __name_native = default;
            int __state_native = default;
            ulong __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __name_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __state_native = (int)(state ? 1 : 0);
                __name_native__marshaller.FromManaged(name, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __name_native = __name_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(display, __name_native, __state_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __name_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XInternAtom", ExactSpelling = true)]
            static extern unsafe ulong __PInvoke(nint __display_native, byte* __name_native, int __state_native);
        }
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XMapWindow", ExactSpelling = true)]
        public static extern partial int XMapWindow(nint display, ulong window);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XNextEvent", ExactSpelling = true)]
        public static extern partial int XNextEvent(nint display, nint xEvent);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XSetWMProtocols", ExactSpelling = true)]
        public static extern partial int XSetWMProtocols(nint display, ulong window, nint atom, int count);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XDestroyWindow", ExactSpelling = true)]
        public static extern partial int XDestroyWindow(nint display, ulong window);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCreateGC", ExactSpelling = true)]
        public static extern partial nint XCreateGC(nint display, ulong window, ulong valueMask, nint values);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCloseDisplay", ExactSpelling = true)]
        public static extern partial int XCloseDisplay(nint display);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCreateImage", ExactSpelling = true)]
        public static extern partial nint XCreateImage(nint display, nint visual, uint depth, global::ImageQT.Models.Linux.ImageFormat format, int offset, nint data, uint width, uint height, int bitmapPad, int bytesPerLine);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCreatePixmap", ExactSpelling = true)]
        public static extern partial ulong XCreatePixmap(nint display, ulong window, uint width, uint height, uint depth);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void XPutImage(nint display, ulong drawable, global::ImageQT.Models.Linux.GraphicsContext gc, nint imageData, int srcX, int srcY, int destX, int destY, uint width, uint height)
        {
            nint __gc_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Linux.GraphicsContext>.ManagedToUnmanagedIn __gc_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __gc_native__marshaller.FromManaged(gc);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __gc_native = __gc_native__marshaller.ToUnmanaged();
                    __PInvoke(display, drawable, __gc_native, imageData, srcX, srcY, destX, destY, width, height);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __gc_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XPutImage", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __display_native, ulong __drawable_native, nint __gc_native, nint __imageData_native, int __srcX_native, int __srcY_native, int __destX_native, int __destY_native, uint __width_native, uint __height_native);
        }
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void XCopyArea(nint display, ulong src, ulong dest, global::ImageQT.Models.Linux.GraphicsContext graphicsContext, int srcX, int srcY, uint width, uint height, int destX, int destY)
        {
            nint __graphicsContext_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Linux.GraphicsContext>.ManagedToUnmanagedIn __graphicsContext_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __graphicsContext_native__marshaller.FromManaged(graphicsContext);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __graphicsContext_native = __graphicsContext_native__marshaller.ToUnmanaged();
                    __PInvoke(display, src, dest, __graphicsContext_native, srcX, srcY, width, height, destX, destY);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __graphicsContext_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XCopyArea", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __display_native, ulong __src_native, ulong __dest_native, nint __graphicsContext_native, int __srcX_native, int __srcY_native, uint __width_native, uint __height_native, int __destX_native, int __destY_native);
        }
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XFreePixmap", ExactSpelling = true)]
        public static extern partial void XFreePixmap(nint display, ulong pixmap);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XFreeGC", ExactSpelling = true)]
        public static extern partial void XFreeGC(nint display, nint gc);
    }
}
namespace ImageQT.DllInterop.Linux
{
    internal unsafe partial class LibX11
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libX11.so", EntryPoint = "XDestroyImage", ExactSpelling = true)]
        public static extern partial void XDestroyImage(nint xImage);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class Appkit
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint ObjCGetClass(string name)
        {
            byte* __name_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __name_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __name_native__marshaller.FromManaged(name, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __name_native = __name_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__name_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __name_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("/System/Library/Frameworks/AppKit.framework/AppKit", EntryPoint = "objc_getClass", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(byte* __name_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint SelGetUid(string selectorName)
        {
            byte* __selectorName_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __selectorName_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __selectorName_native__marshaller.FromManaged(selectorName, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __selectorName_native = __selectorName_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__selectorName_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __selectorName_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "sel_getUid", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(byte* __selectorName_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
        public static extern partial void ObjCMsgSend(nint receiver, nint selector);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void ObjCMsgSend(global::ImageQT.Models.Mac.NSWindow receiver, nint selector, nint arg1)
        {
            nint __receiver_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSWindow>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __PInvoke(__receiver_native, selector, arg1);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __receiver_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __receiver_native, nint __selector_native, nint __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void ObjCMsgSend(global::ImageQT.Models.Mac.NSImage receiver, nint selector, global::ImageQT.Models.Mac.NSBitmapImageRep arg1)
        {
            nint __receiver_native = default;
            nint __arg1_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSBitmapImageRep>.ManagedToUnmanagedIn __arg1_native__marshaller = new();
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSImage>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg1_native__marshaller.FromManaged(arg1);
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg1_native = __arg1_native__marshaller.ToUnmanaged();
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __PInvoke(__receiver_native, selector, __arg1_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg1_native__marshaller.Free();
                __receiver_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __receiver_native, nint __selector_native, nint __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void ObjCMsgSend(global::ImageQT.Models.Mac.NSApplication receiver, nint selector, bool arg1)
        {
            nint __receiver_native = default;
            int __arg1_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSApplication>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg1_native = (int)(arg1 ? 1 : 0);
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __PInvoke(__receiver_native, selector, __arg1_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __receiver_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __receiver_native, nint __selector_native, int __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void ObjCMsgSend(global::ImageQT.Models.Mac.NSWindow receiver, nint selector, global::ImageQT.Models.Mac.NSWindowDelegateImplementation arg1)
        {
            nint __receiver_native = default;
            nint __arg1_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSWindowDelegateImplementation>.ManagedToUnmanagedIn __arg1_native__marshaller = new();
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSWindow>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg1_native__marshaller.FromManaged(arg1);
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg1_native = __arg1_native__marshaller.ToUnmanaged();
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __PInvoke(__receiver_native, selector, __arg1_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg1_native__marshaller.Free();
                __receiver_native__marshaller.Free();
            }

            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe void __PInvoke(nint __receiver_native, nint __selector_native, nint __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
        public static extern partial nint PointerObjCMsgSend(nint receiver, nint selector);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
        public static extern partial nint PointerObjCMsgSend(nint receiver, nint selector, global::ImageQT.Models.Mac.CGSize arg1);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(nint receiver, nint selector, global::ImageQT.Models.Mac.NSImage arg1)
        {
            nint __arg1_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSImage>.ManagedToUnmanagedIn __arg1_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg1_native__marshaller.FromManaged(arg1);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg1_native = __arg1_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(receiver, selector, __arg1_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg1_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, nint __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(nint receiver, nint selector, string arg1)
        {
            byte* __arg1_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __arg1_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg1_native__marshaller.FromManaged(arg1, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg1_native = __arg1_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(receiver, selector, __arg1_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg1_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, byte* __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(nint receiver, nint selector, global::ImageQT.Models.Mac.CGRect arg1, global::ImageQT.Models.Mac.NSWindowStyle arg2, global::ImageQT.Models.Mac.NSBackingStore arg3, bool arg4)
        {
            int __arg4_native;
            nint __retVal;
            // Marshal - Convert managed data to native data.
            __arg4_native = (int)(arg4 ? 1 : 0);
            {
                __retVal = __PInvoke(receiver, selector, arg1, arg2, arg3, __arg4_native);
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, global::ImageQT.Models.Mac.CGRect __arg1_native, global::ImageQT.Models.Mac.NSWindowStyle __arg2_native, global::ImageQT.Models.Mac.NSBackingStore __arg3_native, int __arg4_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(nint receiver, nint selector, nint[] arg1, long arg2, long arg3, long arg4, long arg5, bool arg6, bool arg7, global::ImageQT.Models.Mac.NSString arg8, long arg9, long arg10)
        {
            int __arg6_native = default;
            int __arg7_native = default;
            nint __arg8_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSString>.ManagedToUnmanagedIn __arg8_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg8_native__marshaller.FromManaged(arg8);
                __arg7_native = (int)(arg7 ? 1 : 0);
                __arg6_native = (int)(arg6 ? 1 : 0);
                // Pin - Pin data in preparation for calling the P/Invoke.
                fixed (void* __arg1_native = &global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<nint, nint>.ManagedToUnmanagedIn.GetPinnableReference(arg1))
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg8_native = __arg8_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(receiver, selector, (nint*)__arg1_native, arg2, arg3, arg4, arg5, __arg6_native, __arg7_native, __arg8_native, arg9, arg10);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg8_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, nint* __arg1_native, long __arg2_native, long __arg3_native, long __arg4_native, long __arg5_native, int __arg6_native, int __arg7_native, nint __arg8_native, long __arg9_native, long __arg10_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(global::ImageQT.Models.Mac.NSApplication receiver, nint selector, nint arg1)
        {
            nint __receiver_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSApplication>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__receiver_native, selector, arg1);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __receiver_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, nint __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint PointerObjCMsgSend(global::ImageQT.Models.Mac.NSApplication receiver, nint selector, global::ImageQT.Models.Mac.NSEventMask arg1, global::ImageQT.Models.Mac.NSDate arg2, global::ImageQT.Models.Mac.NSString arg3, bool arg4)
        {
            nint __receiver_native = default;
            nint __arg2_native = default;
            nint __arg3_native = default;
            int __arg4_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSString>.ManagedToUnmanagedIn __arg3_native__marshaller = new();
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSDate>.ManagedToUnmanagedIn __arg2_native__marshaller = new();
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSApplication>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __arg4_native = (int)(arg4 ? 1 : 0);
                __arg3_native__marshaller.FromManaged(arg3);
                __arg2_native__marshaller.FromManaged(arg2);
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __arg3_native = __arg3_native__marshaller.ToUnmanaged();
                    __arg2_native = __arg2_native__marshaller.ToUnmanaged();
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__receiver_native, selector, arg1, __arg2_native, __arg3_native, __arg4_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __arg3_native__marshaller.Free();
                __arg2_native__marshaller.Free();
                __receiver_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __receiver_native, nint __selector_native, global::ImageQT.Models.Mac.NSEventMask __arg1_native, nint __arg2_native, nint __arg3_native, int __arg4_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial bool BoolObjCMsgSend(global::ImageQT.Models.Mac.NSApplication receiver, nint selector, int arg1)
        {
            nint __receiver_native = default;
            bool __retVal = default;
            int __retVal_native = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Mac.NSApplication>.ManagedToUnmanagedIn __receiver_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __receiver_native__marshaller.FromManaged(receiver);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __receiver_native = __receiver_native__marshaller.ToUnmanaged();
                    __retVal_native = __PInvoke(__receiver_native, selector, arg1);
                }

                // Unmarshal - Convert native data to managed data.
                __retVal = __retVal_native != 0;
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __receiver_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_msgSend", ExactSpelling = true)]
            static extern unsafe int __PInvoke(nint __receiver_native, nint __selector_native, int __arg1_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint ObjCGetClass(string name)
        {
            byte* __name_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __name_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __name_native__marshaller.FromManaged(name, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __name_native = __name_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__name_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __name_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_getClass", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(byte* __name_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint ObjCAllocateClassPair(nint classSelector, string selectorName, ulong extraAllocate)
        {
            byte* __selectorName_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __selectorName_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __selectorName_native__marshaller.FromManaged(selectorName, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __selectorName_native = __selectorName_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(classSelector, __selectorName_native, extraAllocate);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __selectorName_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_allocateClassPair", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __classSelector_native, byte* __selectorName_native, ulong __extraAllocate_native);
        }
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_registerClassPair", ExactSpelling = true)]
        public static extern partial void ObjCRegisterClassPair(nint customClass);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "objc_disposeClassPair", ExactSpelling = true)]
        public static extern partial void ObjCDisposeClassPair(nint customClass);
    }
}
namespace ImageQT.DllInterop.Mac
{
    internal unsafe partial class ObjectCRuntime
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial bool ClassAddMethod(nint customClass, nint name, global::ImageQT.Models.Mac.WindowDelegate.windowWillClose imp, string types)
        {
            System.IntPtr __imp_native = default;
            byte* __types_native = default;
            bool __retVal = default;
            int __retVal_native = default;
            // Setup - Perform required setup.
            scoped global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn __types_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __types_native__marshaller.FromManaged(types, stackalloc byte[global::System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller.ManagedToUnmanagedIn.BufferSize]);
                __imp_native = imp != null ? global::System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(imp) : default;
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __types_native = __types_native__marshaller.ToUnmanaged();
                    __retVal_native = __PInvoke(customClass, name, __imp_native, __types_native);
                }

                // NotifyForSuccessfulInvoke - Keep alive any managed objects that need to stay alive across the call.
                global::System.GC.KeepAlive(imp);
                // Unmarshal - Convert native data to managed data.
                __retVal = __retVal_native != 0;
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __types_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("libobjc", EntryPoint = "class_addMethod", ExactSpelling = true)]
            static extern unsafe int __PInvoke(nint __customClass_native, nint __name_native, System.IntPtr __imp_native, byte* __types_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class GDI32
    {
        [global::System.Runtime.InteropServices.DllImportAttribute("gdi32.dll", EntryPoint = "CreateSolidBrush", ExactSpelling = true)]
        public static extern partial nint CreateSolidBrush(int color);
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class Kernel32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint GetModuleHandleA(char[] lpModuleName)
        {
            nint __retVal;
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __lpModuleName_native = &global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<char, char>.ManagedToUnmanagedIn.GetPinnableReference(lpModuleName))
            {
                __retVal = __PInvoke((char*)__lpModuleName_native);
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("kernel32.dll", EntryPoint = "GetModuleHandleA", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(char* __lpModuleName_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial int ShowWindow(global::ImageQT.Models.Windows.WindowWrapper hwnd, int nCmdShow)
        {
            nint __hwnd_native = default;
            int __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Windows.WindowWrapper>.ManagedToUnmanagedIn __hwnd_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __hwnd_native__marshaller.FromManaged(hwnd);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __hwnd_native = __hwnd_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__hwnd_native, nCmdShow);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __hwnd_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "ShowWindow", ExactSpelling = true)]
            static extern unsafe int __PInvoke(nint __hwnd_native, int __nCmdShow_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial bool DestroyWindow(nint hWnd)
        {
            int __lastError;
            bool __retVal;
            int __retVal_native;
            {
                global::System.Runtime.InteropServices.Marshal.SetLastSystemError(0);
                __retVal_native = __PInvoke(hWnd);
                __lastError = global::System.Runtime.InteropServices.Marshal.GetLastSystemError();
            }

            // Unmarshal - Convert native data to managed data.
            __retVal = __retVal_native != 0;
            global::System.Runtime.InteropServices.Marshal.SetLastPInvokeError(__lastError);
            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "DestroyWindow", ExactSpelling = true)]
            static extern unsafe int __PInvoke(nint __hWnd_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint DefWindowProcW(nint hWnd, uint msg, nint wParam, nint lParam)
        {
            int __lastError;
            nint __retVal;
            {
                global::System.Runtime.InteropServices.Marshal.SetLastSystemError(0);
                __retVal = __PInvoke(hWnd, msg, wParam, lParam);
                __lastError = global::System.Runtime.InteropServices.Marshal.GetLastSystemError();
            }

            global::System.Runtime.InteropServices.Marshal.SetLastPInvokeError(__lastError);
            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "DefWindowProcW", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __hWnd_native, uint __msg_native, nint __wParam_native, nint __lParam_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial void PostQuitMessage(int exitCode)
        {
            int __lastError;
            {
                global::System.Runtime.InteropServices.Marshal.SetLastSystemError(0);
                __PInvoke(exitCode);
                __lastError = global::System.Runtime.InteropServices.Marshal.GetLastSystemError();
            }

            global::System.Runtime.InteropServices.Marshal.SetLastPInvokeError(__lastError);
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "PostQuitMessage", ExactSpelling = true)]
            static extern unsafe void __PInvoke(int __exitCode_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial nint GetDC(global::ImageQT.Models.Windows.WindowWrapper hWnd)
        {
            nint __hWnd_native = default;
            nint __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Windows.WindowWrapper>.ManagedToUnmanagedIn __hWnd_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __hWnd_native__marshaller.FromManaged(hWnd);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __hWnd_native = __hWnd_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__hWnd_native);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __hWnd_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "GetDC", ExactSpelling = true)]
            static extern unsafe nint __PInvoke(nint __hWnd_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial int ReleaseDC(global::ImageQT.Models.Windows.WindowWrapper hwnd, nint hdc)
        {
            nint __hwnd_native = default;
            int __retVal = default;
            // Setup - Perform required setup.
            global::System.Runtime.InteropServices.Marshalling.SafeHandleMarshaller<global::ImageQT.Models.Windows.WindowWrapper>.ManagedToUnmanagedIn __hwnd_native__marshaller = new();
            try
            {
                // Marshal - Convert managed data to native data.
                __hwnd_native__marshaller.FromManaged(hwnd);
                {
                    // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                    __hwnd_native = __hwnd_native__marshaller.ToUnmanaged();
                    __retVal = __PInvoke(__hwnd_native, hdc);
                }
            }
            finally
            {
                // CleanupCallerAllocated - Perform cleanup of caller allocated resources.
                __hwnd_native__marshaller.Free();
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "ReleaseDC", ExactSpelling = true)]
            static extern unsafe int __PInvoke(nint __hwnd_native, nint __hdc_native);
        }
    }
}
namespace ImageQT.DllInterop.Windows
{
    internal static unsafe partial class User32
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.36612")]
        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
        public static partial int UnregisterClassW(string hwnd, nint hInstance)
        {
            int __retVal;
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __hwnd_native = &global::System.Runtime.InteropServices.Marshalling.Utf16StringMarshaller.GetPinnableReference(hwnd))
            {
                __retVal = __PInvoke((ushort*)__hwnd_native, hInstance);
            }

            return __retVal;
            // Local P/Invoke
            [global::System.Runtime.InteropServices.DllImportAttribute("User32.dll", EntryPoint = "UnregisterClassW", ExactSpelling = true)]
            static extern unsafe int __PInvoke(ushort* __hwnd_native, nint __hInstance_native);
        }
    }
}
